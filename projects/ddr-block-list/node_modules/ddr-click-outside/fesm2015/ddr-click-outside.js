import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DdrClickOutsideDirective {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.clickOutsideEnabled = true;
        this.clickOutside = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onDocumentClick(event) {
        if (this.clickOutsideEnabled) {
            /** @type {?} */
            const target = (/** @type {?} */ (event.target));
            if (target && !this.elementRef.nativeElement.contains(target)) {
                if (this.clickOutsideDelay) {
                    setTimeout((/**
                     * @return {?}
                     */
                    () => {
                        this.clickOutside.emit(event);
                    }), this.clickOutsideDelay);
                }
                else {
                    this.clickOutside.emit(event);
                }
            }
        }
    }
}
DdrClickOutsideDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ddrClickOutside]'
            },] }
];
/** @nocollapse */
DdrClickOutsideDirective.ctorParameters = () => [
    { type: ElementRef }
];
DdrClickOutsideDirective.propDecorators = {
    clickOutsideEnabled: [{ type: Input }],
    clickOutsideDelay: [{ type: Input }],
    clickOutside: [{ type: Output }],
    onDocumentClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutsideEnabled;
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutsideDelay;
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutside;
    /**
     * @type {?}
     * @private
     */
    DdrClickOutsideDirective.prototype.elementRef;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class DdrClickOutsideModule {
}
DdrClickOutsideModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    DdrClickOutsideDirective
                ],
                imports: [],
                exports: [
                    DdrClickOutsideDirective
                ]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { DdrClickOutsideModule, DdrClickOutsideDirective as Éµa };
//# sourceMappingURL=ddr-click-outside.js.map
