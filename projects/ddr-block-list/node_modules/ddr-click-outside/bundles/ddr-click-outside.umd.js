(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ddr-click-outside', ['exports', '@angular/core'], factory) :
    (global = global || self, factory(global['ddr-click-outside'] = {}, global.ng.core));
}(this, function (exports, core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DdrClickOutsideDirective = /** @class */ (function () {
        function DdrClickOutsideDirective(elementRef) {
            this.elementRef = elementRef;
            this.clickOutsideEnabled = true;
            this.clickOutside = new core.EventEmitter();
        }
        /**
         * @param {?} event
         * @return {?}
         */
        DdrClickOutsideDirective.prototype.onDocumentClick = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            var _this = this;
            if (this.clickOutsideEnabled) {
                /** @type {?} */
                var target = (/** @type {?} */ (event.target));
                if (target && !this.elementRef.nativeElement.contains(target)) {
                    if (this.clickOutsideDelay) {
                        setTimeout((/**
                         * @return {?}
                         */
                        function () {
                            _this.clickOutside.emit(event);
                        }), this.clickOutsideDelay);
                    }
                    else {
                        this.clickOutside.emit(event);
                    }
                }
            }
        };
        DdrClickOutsideDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[ddrClickOutside]'
                    },] }
        ];
        /** @nocollapse */
        DdrClickOutsideDirective.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        DdrClickOutsideDirective.propDecorators = {
            clickOutsideEnabled: [{ type: core.Input }],
            clickOutsideDelay: [{ type: core.Input }],
            clickOutside: [{ type: core.Output }],
            onDocumentClick: [{ type: core.HostListener, args: ['document:click', ['$event'],] }]
        };
        return DdrClickOutsideDirective;
    }());
    if (false) {
        /** @type {?} */
        DdrClickOutsideDirective.prototype.clickOutsideEnabled;
        /** @type {?} */
        DdrClickOutsideDirective.prototype.clickOutsideDelay;
        /** @type {?} */
        DdrClickOutsideDirective.prototype.clickOutside;
        /**
         * @type {?}
         * @private
         */
        DdrClickOutsideDirective.prototype.elementRef;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var DdrClickOutsideModule = /** @class */ (function () {
        function DdrClickOutsideModule() {
        }
        DdrClickOutsideModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            DdrClickOutsideDirective
                        ],
                        imports: [],
                        exports: [
                            DdrClickOutsideDirective
                        ]
                    },] }
        ];
        return DdrClickOutsideModule;
    }());

    exports.DdrClickOutsideModule = DdrClickOutsideModule;
    exports.Éµa = DdrClickOutsideDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ddr-click-outside.umd.js.map
