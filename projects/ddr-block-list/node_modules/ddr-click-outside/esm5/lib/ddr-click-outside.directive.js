/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';
var DdrClickOutsideDirective = /** @class */ (function () {
    function DdrClickOutsideDirective(elementRef) {
        this.elementRef = elementRef;
        this.clickOutsideEnabled = true;
        this.clickOutside = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    DdrClickOutsideDirective.prototype.onDocumentClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (this.clickOutsideEnabled) {
            /** @type {?} */
            var target = (/** @type {?} */ (event.target));
            if (target && !this.elementRef.nativeElement.contains(target)) {
                if (this.clickOutsideDelay) {
                    setTimeout((/**
                     * @return {?}
                     */
                    function () {
                        _this.clickOutside.emit(event);
                    }), this.clickOutsideDelay);
                }
                else {
                    this.clickOutside.emit(event);
                }
            }
        }
    };
    DdrClickOutsideDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ddrClickOutside]'
                },] }
    ];
    /** @nocollapse */
    DdrClickOutsideDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DdrClickOutsideDirective.propDecorators = {
        clickOutsideEnabled: [{ type: Input }],
        clickOutsideDelay: [{ type: Input }],
        clickOutside: [{ type: Output }],
        onDocumentClick: [{ type: HostListener, args: ['document:click', ['$event'],] }]
    };
    return DdrClickOutsideDirective;
}());
export { DdrClickOutsideDirective };
if (false) {
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutsideEnabled;
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutsideDelay;
    /** @type {?} */
    DdrClickOutsideDirective.prototype.clickOutside;
    /**
     * @type {?}
     * @private
     */
    DdrClickOutsideDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGRyLWNsaWNrLW91dHNpZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZGRyLWNsaWNrLW91dHNpZGUvIiwic291cmNlcyI6WyJsaWIvZGRyLWNsaWNrLW91dHNpZGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakc7SUFVRSxrQ0FBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUxqQyx3QkFBbUIsR0FBWSxJQUFJLENBQUM7UUFHbkMsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO0lBRVYsQ0FBQzs7Ozs7SUFHeEMsa0RBQWU7Ozs7SUFEdEIsVUFDdUIsS0FBaUI7UUFEeEMsaUJBd0JDO1FBckJDLElBQUksSUFBSSxDQUFDLG1CQUFtQixFQUFFOztnQkFFdEIsTUFBTSxHQUFHLG1CQUFBLEtBQUssQ0FBQyxNQUFNLEVBQWU7WUFFMUMsSUFBSSxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBRTdELElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO29CQUMxQixVQUFVOzs7b0JBQUM7d0JBQ1QsS0FBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ2hDLENBQUMsR0FBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztpQkFDNUI7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7aUJBQy9CO2FBR0Y7U0FHRjtJQUdILENBQUM7O2dCQXBDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtpQkFDOUI7Ozs7Z0JBSjhELFVBQVU7OztzQ0FPdEUsS0FBSztvQ0FDTCxLQUFLOytCQUVMLE1BQU07a0NBSU4sWUFBWSxTQUFDLGdCQUFnQixFQUFFLENBQUMsUUFBUSxDQUFDOztJQTBCNUMsK0JBQUM7Q0FBQSxBQXRDRCxJQXNDQztTQW5DWSx3QkFBd0I7OztJQUVuQyx1REFBNkM7O0lBQzdDLHFEQUFtQzs7SUFFbkMsZ0RBQXdEOzs7OztJQUU1Qyw4Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tkZHJDbGlja091dHNpZGVdJ1xufSlcbmV4cG9ydCBjbGFzcyBEZHJDbGlja091dHNpZGVEaXJlY3RpdmUge1xuXG4gIEBJbnB1dCgpIGNsaWNrT3V0c2lkZUVuYWJsZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKSBjbGlja091dHNpZGVEZWxheTogbnVtYmVyO1xuXG4gIEBPdXRwdXQoKSBjbGlja091dHNpZGUgPSBuZXcgRXZlbnRFbWl0dGVyPE1vdXNlRXZlbnQ+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7IH1cblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDpjbGljaycsIFsnJGV2ZW50J10pXG4gIHB1YmxpYyBvbkRvY3VtZW50Q2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpIHtcblxuICAgIGlmICh0aGlzLmNsaWNrT3V0c2lkZUVuYWJsZWQpIHtcblxuICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuXG4gICAgICBpZiAodGFyZ2V0ICYmICF0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5jb250YWlucyh0YXJnZXQpKSB7XG5cbiAgICAgICAgaWYgKHRoaXMuY2xpY2tPdXRzaWRlRGVsYXkpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuY2xpY2tPdXRzaWRlLmVtaXQoZXZlbnQpO1xuICAgICAgICAgIH0sIHRoaXMuY2xpY2tPdXRzaWRlRGVsYXkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY2xpY2tPdXRzaWRlLmVtaXQoZXZlbnQpO1xuICAgICAgICB9XG5cblxuICAgICAgfVxuXG5cbiAgICB9XG5cblxuICB9XG5cbn1cbiJdfQ==